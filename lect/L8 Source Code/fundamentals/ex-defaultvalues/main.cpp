/*************************************************************************
 *
 * Copyright (c) 2012 Digia Plc.
 * All rights reserved.
 *
 * See the LICENSE.txt file shipped along with this file for the license.
 *
 *************************************************************************/

#include <QtWidgets>

enum ButtonType { DefaultSignal, ValueSignal };
enum RepaintOperation { NoRepaint, AlsoRepaint };

class Test : public QPushButton
{
    Q_OBJECT

public:
    Test(ButtonType type)
    {
        if (type == DefaultSignal) {
            connect(this, SIGNAL(clicked()), this, SLOT(emitDefault()));
            setText("Default (repaint)");
        }
        else if (type == ValueSignal) {
            connect(this, SIGNAL(clicked()), this, SLOT(emitValue()));
            setText("With Value (no repaint)");
        }
    }

signals:
    void doUpdate(RepaintOperation op = AlsoRepaint);

private slots:
    void emitDefault()
    {
        emit doUpdate();
    }

    void emitValue()
    {
        emit doUpdate(NoRepaint);
    }
};

class Receiver: public QLabel
{
    Q_OBJECT

public:
    Receiver()
    {
        setAlignment(Qt::AlignCenter);
        setText("Push a Button");
    }

public slots:
    void updateSlot(RepaintOperation op)
    {
        if (op == AlsoRepaint)
            setText("Also Repaint");
        else
            setText("No Repaint");
    }
};

int main(int argc, char *argv[])
{
    QApplication app(argc, argv);

    QWidget top;

    Test *test1 = new Test(DefaultSignal);
    Test *test2 = new Test(ValueSignal);
    Receiver* result = new Receiver;

    QObject::connect(
        test1, SIGNAL(doUpdate(RepaintOperation)),
        result, SLOT(updateSlot(RepaintOperation))
    );
    QObject::connect(
        test2, SIGNAL(doUpdate(RepaintOperation)),
        result, SLOT(updateSlot(RepaintOperation))
    );

    QVBoxLayout *layout = new QVBoxLayout;
    layout->addWidget(test1);
    layout->addWidget(test2);
    layout->addWidget(result);

    top.setLayout(layout);
    top.show();

    return app.exec();
}

// Meta-information generated by moc:
#include "main.moc"
